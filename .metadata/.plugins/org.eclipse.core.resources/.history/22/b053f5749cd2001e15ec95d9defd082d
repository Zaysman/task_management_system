package com.isaiah.utilities;

import java.io.FileWriter;
import java.io.BufferedWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.LocalDateTime;

import java.io.IOException;

public class LogWriterUtility {

	final static private Path LogDirectory = Paths.get("logs//");
	final static private Path DatabaseLogDirectory = LogDirectory.resolve("database//");
	final static private Path QueryLogDirectory = LogDirectory.resolve("query//");


	private static void createLogDirectory() {
		Path logDir = LogDirectory;

		if(!Files.exists(logDir)) {
			try {
				Files.createDirectory(logDir);

			} catch(IOException ioe) {
				System.err.println("The  log file directory for today, " + LocalDate.now() + " ,was not created");
				ioe.printStackTrace();
			}
		}
	}

	public static void createDBLogDirectory() {
		Path dbLogDir = DatabaseLogDirectory;

		if(!Files.exists(dbLogDir)) {

			try {
				Files.createDirectory(dbLogDir);

			} catch(IOException ioe) {
				System.err.println("The database log directory for was not created");
				ioe.printStackTrace();
			}
		}
	}

	public static void createQueryLogDirectory() {
		Path queryLogDir = QueryLogDirectory;

		if(!Files.exists(queryLogDir)) {

			try {
				Files.createDirectory(queryLogDir);

			} catch(IOException ioe) {
				System.err.println("The query directory was not created");
				ioe.printStackTrace();
			}
		}
	}

	public static void createDBLogFile() {
		//Sample DBLogFileName: Database-2024-02-23
		String todayFileName = "database-" + getDateAndFileExtenstion();
		Path TodayDBFilepath = DatabaseLogDirectory.resolve(todayFileName);

		if(!Files.exists(TodayDBFilepath)) {

			try {
				Files.createFile(TodayDBFilepath);

			} catch(IOException ioe) {
				System.err.println("The database log file for today, " + LocalDate.now() + " ,was not created");
				ioe.printStackTrace();
			}

		}
	}
	
	public static void createQueryLogFile() {
		String todayFileName = "query-" + getDateAndFileExtenstion();
		Path todayQueryFilePath = QueryLogDirectory.resolve(todayFileName);
		
		if(!Files.exists(todayQueryFilePath)) {
			
			try {
				Files.createFile(todayQueryFilePath);
				
			} catch(IOException ioe) {
				System.err.println("The query log file for today, " + LocalDate.now() + " ,was not created");
				ioe.printStackTrace();
			}
			
		}
	}
	
	
	


	public static void writeToDBLogFile(String str) {
		Path todayLogFile = DatabaseLogDirectory.resolve("database-" + getDateAndFileExtenstion());
		String strWithTime = getLogFileTimeStamp() + str;
		
		if(Files.exists(todayLogFile)) {
			
			try(FileWriter fw = new FileWriter(todayLogFile.toString(), true); BufferedWriter bw = new BufferedWriter(fw)) {
				
				bw.write(strWithTime.toCharArray());
				bw.newLine();
			
			} catch(IOException ioe) {
				System.err.println("There was an issue writing to Database Log file.");
				
			}
		} else {
			createDBLogFile();
		}	
	}
	
	public static void writeToQueryLogFile(String str) {
		Path todayLogFile = QueryLogDirectory.resolve("query-" + getDateAndFileExtenstion());
		String strWithTime = getLogFileTimeStamp() + str;
		
		if(Files.exists(todayLogFile)) {
			
			try(FileWriter fw = new FileWriter(todayLogFile.toString(), true); BufferedWriter bw = new BufferedWriter(fw)) {
				
				bw.write(strWithTime.toCharArray());
				bw.newLine();
				
			} catch(IOException ioe) {
				System.err.println("There was an issue writing to Query Log file.");
			}
		} else {
			createQueryLogFile();
		}
		
	}
	
	private static String getDateAndFileExtenstion() {
		return LocalDate.now().toString() + ".txt";
	}
	
	private static String getLogFileTimeStamp() {
		return "[" + LocalTime.now().toString() + "]";
	}
	
	public static void main(String[] args) {
		System.out.println(Instant.now());

		LocalDate currDate = LocalDate.now();
		LocalTime currTime = LocalTime.now();
		LocalDateTime currDateTime = LocalDateTime.now();

		System.out.println("currDate: " + currDate.toString() + "\n"
				+ "currTime: " + currTime + "\n" 
				+ "currDateTime: " + currDateTime);

		createDBLogFile();
		createDBLogDirectory();
		createQueryLogDirectory();
		createQueryLogFile();
		
		writeToDBLogFile("test message");
		writeToDBLogFile("This should come after whatever was written after what was already ");
		
		writeToQueryLogFile("test message");
		writeToQueryLogFile("This should come after whatever was written after what was already ");
	}
	
	



}
